<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [ ]>
<chapter id="configuration">
   <title>Configuration</title>
   <para>
      This chapter lays out how to configure the TCK Harness by specifying
      the SPI implementation classes, defining the target container connection
      information, and various other switches. You then learn how to setup a TCK
      runner project that executes the TCK test suite, putting these
      settings into practice.
   </para>

   <section id="tck-properties">
      <title>TCK Properties</title>
      <para>
         System properties and/or the resource
         <code>META-INF/cdi-tck.properties</code>,
         a Java properties file, are used to configure the TCK.
      </para>
      <para>
         You should set the following required properties:
      </para>
      <table frame="all">
         <title>Required TCK Configuration Properties</title>
         <tgroup cols="2">
            <colspec colnum="1" colname="property" colwidth="5*" />
            <colspec colnum="2" colname="description" colwidth="2*" />
            <thead>
               <row>
                  <entry>Property = Example Value</entry>
                  <entry>Description</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.libraryDirectory=/path/to/extra/libraries
                     </literal>
                  </entry>
                  <entry>
                     The directory containing extra JARs to be placed in
                     the test archive library directory such as the porting package
                     implementation.
                  </entry>
               </row>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.testDataSource=java:jboss/datasources/ExampleDS</literal>
                  </entry>
                  <entry>
                     A few TCK tests work with Java EE persistence services (JPA, JTA) and require a data source to be provided.
                     This property defines JNDI name of such resource. Required for the tests within the <emphasis>persistence</emphasis> test group.
                  </entry>
               </row>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.testJmsConnectionFactory=java:/ConnectionFactory</literal>
                  </entry>
                  <entry>
                    The JNDI name of the JMS test ConnectionFactory. Required for the tests within the <emphasis>jms</emphasis> test group.
                  </entry>
               </row>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.testJmsQueue=java:/queue/test</literal>
                  </entry>
                  <entry>
                    The JNDI name of the JMS test Queue. Required for the tests within the <emphasis>jms</emphasis> test group.
                  </entry>
               </row>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.testJmsTopic=java:/topic/test</literal>
                  </entry>
                  <entry>
                    The JNDI name of the JMS test Topic. Required for the tests within the <emphasis>jms</emphasis> test group.
                  </entry>
               </row>
            </tbody>
         </tgroup>
      </table>
       <table frame="all">
         <title>Optional TCK Configuration Properties</title>
         <tgroup cols="2">
            <colspec colnum="1" colname="property" colwidth="5*" />
            <colspec colnum="2" colname="description" colwidth="2*" />
            <thead>
               <row>
                  <entry>Property = Example Value</entry>
                  <entry>Description</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>
                     <literal>org.jboss.cdi.tck.testTimeoutFactor=200</literal>
                  </entry>
                  <entry>
                    Tests use this percentage value to adjust the final timeout (e.g. when waiting for some async processing) so that it's possible to configure timeouts according to the testing runtime performance and throughput.
                    The value must be an integer greater than zero. The default value is 100% - i.e. timeouts will remain the same.
                  </entry>
               </row>
            </tbody>
         </tgroup>
      </table>
   </section>
   <section id="arquillian-settings">
      <title>Arquillian settings</title>
      <para>
        The Arquillian testing platform will look for configuration settings in a file named <emphasis>arquillian.xml</emphasis> in
        the root of your classpath. If it exists it will be auto loaded, else default values will be used. This file is not a requirement
        however it's very useful for container configuration. See an example configuration for JBoss TCK runner:
      </para>
      <programlisting>
        weld/jboss-tck-runner/src/test/wildfly/arquillian.xml
      </programlisting>
   </section>
   <section id="porting-package">
      <title>The Porting Package</title>
      <para>
         The CDI TCK relies on an implementation of the porting package to
         function. There are times when the tests need to tap
         directly into the CDI implementation to manipulate behavior or verify
         results. The porting package includes a set of SPIs that provide the
         TCK with this level of access without tying the tests to a given
         implementation.
      </para>
      <para>
         The SPI classes in the CDI TCK are as follows:
      </para>
      <itemizedlist>
         <listitem>
            <para>
               <literal>org.jboss.cdi.tck.spi.Beans</literal>
            </para>
         </listitem>
         <listitem>
            <para>
               <literal>org.jboss.cdi.tck.spi.Contexts</literal>
            </para>
         </listitem>
         <listitem>
            <para>
               <literal>org.jboss.cdi.tck.spi.EL</literal>
            </para>
         </listitem>
      </itemizedlist>

      <para>
         Please consult the JavaDoc for these interfaces for the implementation
         requirements.
      </para>

   </section>

   <section>
      <title>Using the CDI TCK with the Java EE Web Profile</title>
      <para>
         You can configure the CDI TCK to just run tests appropriate to the Java EE
         Web Profile by excluding TestNG group <emphasis>javaee-full</emphasis>,
         e.g. via maven-surefire-plugin configuration:
      </para>
      <programlisting><![CDATA[
      <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <excludedGroups>javaee-full</excludedGroups>
            </configuration>
       </plugin>
        ]]></programlisting>
   </section>

   <section>
      <title>Configuring TestNG to execute the TCK</title>
      <para>
         The CDI TCK is built atop Arquillian and TestNG, and it's TestNG that is
         responsible for selecting the tests to execute, the order of
         execution, and reporting the results. Detailed TestNG documentation
         can be found at <ulink
         url="http://testng.org/doc/documentation-main.html">testng.org</ulink>.
      </para>
      <para>
         Certain TestNG configuration file must be run by TestNG 6.3 (described by the TestNG documentation as "with a
         <literal>testng.xml</literal> file") unmodified for an implementation to pass the TCK.
         The TCK distribution contains the configuration file accurate at the date of the release - <literal>artifacts/cdi-tck-impl-suite.xml</literal>.
         However this artifact may not be up to date due to unresolved challenges or pending releases. Therefore a canonical configuration file exists.
         This file is located in the CDI TCK source code repository at <emphasis>${CORRESPONDING_BRANCH_ROOT}/impl/src/main/resources/tck-tests.xml</emphasis>.
      </para>
      <note>
         <para>
            The canonical configuration file for CDI TCK is located at <ulink
         url="https://github.com/cdi-spec/cdi-tck/blob/master/impl/src/main/resources/tck-tests.xml">https://github.com/cdi-spec/cdi-tck/blob/master/impl/src/main/resources/tck-tests.xml</ulink>.
         </para>
      </note>
      <para>
        This file also allows tests to be excluded from a run:
      </para>
      <programlisting><![CDATA[<suite name="CDI TCK" verbose="0" configfailurepolicy="continue">
   <test name="CDI TCK">
      ...
      <classes>
         <class name="org.jboss.cdi.tck.tests.context.application.ApplicationContextTest">
            <methods>
               <exclude name="testApplicationScopeActiveDuringServiceMethod"/>
            </methods>
         </class>
      </classes>
      ...
   </test>
</suite>]]></programlisting>

      <para>
         TestNG provides extensive reporting information. Depending on the
         build tool or IDE you use, the reporting will take a different format.
         Please consult the TestNG documentation and the tool documentation for
         more information.
      </para>
   </section>

   <section>
      <title>Configuring your build environment to execute the TCK</title>
      <para>
         It's beyond the scope of this guide to describe in how to set up your
         build environment to run the TCK. The TestNG documentation provides extensive
         information on launching TestNG using the Java, Ant, Eclipse or IntelliJ IDEA.
      </para>
   </section>

   <section>
      <title>Configuring your application server to execute the TCK</title>
      <para>
         The TCK makes use of the Java 1.4 keyword <literal>assert</literal>; you
         must ensure that the JVM used to run the application server is started
         with assertions enabled. See
         <ulink url="http://docs.oracle.com/javase/7/docs/technotes/guides/language/assert.html#enable-disable">Programming With Assertions</ulink>
         for more information on how to enable assertions.
      </para>
      <para>
        Tests within the <emphasis>jms</emphasis> test group require some basic Java Message Service configuration.
        A connection factory, a queue destination for PTP messaging domain and a topic destination for pub/sub messaging domain must be available via JNDI lookup.
    The corresponding JNDI names are specified with configuration properties - see <xref linkend="tck-properties" />.
      </para>
      <para>
        Tests within the <emphasis>persistence</emphasis> test group require basic data source configuration. The data source has to be valid and JTA-based. The JNDI name of the DataSource is specified with configuration property - see <xref linkend="tck-properties" />.
      </para>
      <para>
        Tests within the <emphasis>installedLib</emphasis> test group require the CDI TCK <literal>cdi-tck-ext-lib</literal> artifact to be installed as a library (see also Java EE 6 specification, section EE.8.2.2 "Installed Libraries").
      </para>
      <para>
        Tests within the <emphasis>systemProperties</emphasis> test group require the following system properties to be set:
      </para>
      <table frame="all">
         <tgroup cols="2">
            <colspec colnum="1" colname="name" />
            <colspec colnum="2" colname="value"  />
            <thead>
               <row>
                  <entry>Name</entry>
                  <entry>Value</entry>
               </row>
            </thead>
            <tbody>
               <row>
                  <entry>
                     <literal>cdiTckExcludeDummy</literal>
                  </entry>
                  <entry>
                     <literal>true</literal>
                  </entry>
               </row>
            </tbody>
         </tgroup>
      </table>
   </section>
<!--
vim: ts=3:sw=3:tw=80:set expandtab
-->
</chapter>
