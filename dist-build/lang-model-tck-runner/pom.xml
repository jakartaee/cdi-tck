<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>CDI Lite Language Model TCK Runner</name>
    <groupId>org.jboss.weld</groupId>
    <artifactId>lang-model-tck-runner</artifactId>
    <version>4.0.5-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <weld.version>6.0.0.Beta1</weld.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>cdi-tck-lang-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-lite-extension-translator</artifactId>
                <version>${weld.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-test-common</artifactId>
                <version>${weld.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-impl</artifactId>
                <version>${weld.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-weld-embedded</artifactId>
                <version>3.0.2.Final</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>5.0.0.Alpha3</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.protocol</groupId>
                <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
                <version>${arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- we need to depend on the impl to make sure this module is built after weld-lite-extension-translator -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-lite-extension-translator</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>${arquillian.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-lang-model</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-test-common</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Run the TCK in standalone mode -->
        <profile>
            <id>weld-embedded</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>!incontainer</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-weld-embedded</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core-impl</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <!-- Run the TCK in the managed container (full Java EE platform) -->
        <profile>
            <id>incontainer</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>incontainer</name>
                    <value>true</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>org.jboss.arquillian.core</groupId>
                            <artifactId>arquillian-core-spi</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>org.jboss.arquillian.core</groupId>
                            <artifactId>arquillian-core-api</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>org.jboss.logmanager</groupId>
                            <artifactId>log4j-jboss-logmanager</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <directory>src/test/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/test/wildfly</directory>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-jboss-home-is-set</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <skip>true</skip>
                                    <rules>
                                        <requireEnvironmentVariable>
                                            <variableName>JBOSS_HOME</variableName>
                                            <message>Environment variable "JBOSS_HOME" must be set in order to execute in-container tests. Please configure it so that it points to your WildFly installation.</message>
                                        </requireEnvironmentVariable>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>
                                --add-exports=java.desktop/sun.awt=ALL-UNNAMED
                                --add-opens=java.base/java.io=ALL-UNNAMED
                                --add-opens=java.base/java.lang=ALL-UNNAMED
                                --add-opens=java.base/java.lang.invoke=ALL-UNNAMED
                                --add-opens=java.base/java.security=ALL-UNNAMED
                                --add-opens=java.base/java.util=ALL-UNNAMED
                                --add-opens=java.management/javax.management=ALL-UNNAMED
                                --add-opens=java.naming/javax.naming=ALL-UNNAMED
                            </argLine>
                            <properties>
                                <property>
                                    <!-- Note a 7.4.0 issue results in NPEs and useless output if you go higher than 1 here -->
                                    <name>surefire.testng.verbose</name>
                                    <value>0</value>
                                </property>
                            </properties>
                            <systemPropertyVariables>
                                <!-- Silencing the broken code in getActiveConfiguration(),
                                see https://github.com/arquillian/arquillian/blob/master/impl-base/src/main/java/org/jboss/arquillian/impl/client/container/ContainerRegistryCreator.java -->
                                <arquillian.launch>wildfly-23</arquillian.launch>
                                <!-- Specified system properties are not
                                available during in-container test execution -->
                                <org.jboss.cdi.tck.libraryDirectory>target/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                                <org.jboss.cdi.tck.testDataSource>java:jboss/datasources/ExampleDS</org.jboss.cdi.tck.testDataSource>
                            </systemPropertyVariables>
                            <systemProperties>
                                <jacoco.agent>${jacoco.agent}</jacoco.agent>
                                <!-- Specifiy any garbage collection related args here -->
                                <gc.args />
                                <!-- This property propagates to the javaVmArguments in arquillian.xml -->
                                <additional.vm.args>
                                    ${surefire.plugin.jdk17.args}
                                </additional.vm.args>
                            </systemProperties>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <!-- perform this any time before the tests are executed -->
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${JBOSS_HOME}/standalone/configuration</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${JBOSS_HOME}/docs/examples/configs</directory>
                                            <includes>standalone-activemq-embedded.xml</includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>